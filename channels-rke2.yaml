releases:
  - version: v1.18.17+rke2r1
    minChannelServerVersion: v2.5.0-rc1
    maxChannelServerVersion: v2.5.99
  - version: v1.19.9+rke2r1
    minChannelServerVersion: v2.5.0-rc1
    maxChannelServerVersion: v2.5.99
  - version: v1.20.5+rke2r1
    minChannelServerVersion: v2.5.6-rc1
    maxChannelServerVersion: v2.5.99
    chartValues:
      rke2-ingress: |
        ## nginx configuration
        ## Ref: https://github.com/kubernetes/ingress/blob/master/controllers/nginx/configuration.md
        ##
        controller:
          name: controller
          image:
            pullPolicy: IfNotPresent
            # www-data -> uid 101
            runAsUser: 101
            allowPrivilegeEscalation: true
        
          # This will fix the issue of HPA not being able to read the metrics.
          # Note that if you enable it for existing deployments, it won't work as the labels are immutable.
          # We recommend setting this to true for new deployments.
          useComponentLabel: false
        
          # Configures the ports the nginx-controller listens on
          containerPort:
            http: 80
            https: 443
        
          # Will add custom configuration options to Nginx https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/
          config: {}
        
          # Maxmind license key to download GeoLite2 Databases
          # https://blog.maxmind.com/2019/12/18/significant-changes-to-accessing-and-using-geolite2-databases
          maxmindLicenseKey: ""
        
          # Will add custom headers before sending traffic to backends according to https://github.com/kubernetes/ingress-nginx/tree/master/docs/examples/customization/custom-headers
          proxySetHeaders: {}
        
          # Will add custom headers before sending response traffic to the client according to: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#add-headers
          addHeaders: {}
        
          # Required for use with CNI based kubernetes installations (such as ones set up by kubeadm),
          # since CNI and hostport don't mix yet. Can be deprecated once https://github.com/kubernetes/kubernetes/issues/23920
          # is merged
          hostNetwork: true
        
          # Optionally customize the pod dnsConfig.
          dnsConfig: {}
        
          # Optionally change this to ClusterFirstWithHostNet in case you have 'hostNetwork: true'.
          # By default, while using host network, name resolution uses the host's DNS. If you wish nginx-controller
          # to keep resolving names inside the k8s network, use ClusterFirstWithHostNet.
          dnsPolicy: ClusterFirstWithHostNet
        
          # Bare-metal considerations via the host network https://kubernetes.github.io/ingress-nginx/deploy/baremetal/#via-the-host-network
          # Ingress status was blank because there is no Service exposing the NGINX Ingress controller in a configuration using the host network, the default --publish-service flag used in standard cloud setups does not apply
          reportNodeInternalIp: false
        
          ## Use host ports 80 and 443
          daemonset:
            useHostPort: false
        
            hostPorts:
              http: 80
              https: 443
        
          ## Required only if defaultBackend.enabled = false
          ## Must be <namespace>/<service_name>
          ##
          defaultBackendService: ""
        
          ## Election ID to use for status update
          ##
          electionID: ingress-controller-leader
        
          ## Name of the ingress class to route through this controller
          ##
          ingressClass: nginx
        
          # labels to add to the deployment metadata
          deploymentLabels: {}
        
          # labels to add to the pod container metadata
          podLabels: {}
          #  key: value
        
          ## Security Context policies for controller pods
          ## See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for
          ## notes on enabling and using sysctls
          ##
          podSecurityContext: {}
        
          ## Allows customization of the external service
          ## the ingress will be bound to via DNS
          publishService:
            enabled: false
            ## Allows overriding of the publish service to bind to
            ## Must be <namespace>/<service_name>
            ##
            pathOverride: ""
        
          ## Limit the scope of the controller
          ##
          scope:
            enabled: false
            namespace: ""   # defaults to .Release.Namespace
        
          ## Allows customization of the configmap / nginx-configmap namespace
          ##
          configMapNamespace: ""   # defaults to .Release.Namespace
        
          ## Allows customization of the tcp-services-configmap namespace
          ##
          tcp:
            configMapNamespace: ""   # defaults to .Release.Namespace
        
          ## Allows customization of the udp-services-configmap namespace
          ##
          udp:
            configMapNamespace: ""   # defaults to .Release.Namespace
        
          ## Additional command line arguments to pass to nginx-ingress-controller
          ## E.g. to specify the default SSL certificate you can use
          ## extraArgs:
          ##   default-ssl-certificate: "<namespace>/<secret_name>"
          extraArgs: {}
        
          ## Additional environment variables to set
          extraEnvs: []
          # extraEnvs:
          #   - name: FOO
          #     valueFrom:
          #       secretKeyRef:
          #         key: FOO
          #         name: secret-resource
        
          ## DaemonSet or Deployment
          ##
          kind: Deployment
        
          ## Annotations to be added to the controller deployment
          ##
          deploymentAnnotations: {}
        
          # The update strategy to apply to the Deployment or DaemonSet
          ##
          updateStrategy: {}
          #  rollingUpdate:
          #    maxUnavailable: 1
          #  type: RollingUpdate
        
          # minReadySeconds to avoid killing pods before we are ready
          ##
          minReadySeconds: 0
        
        
          ## Node tolerations for server scheduling to nodes with taints
          ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
          ##
          tolerations: []
          #  - key: "key"
          #    operator: "Equal|Exists"
          #    value: "value"
          #    effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"
        
          ## Affinity and anti-affinity
          ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
          ##
          affinity: {}
            # # An example of preferred pod anti-affinity, weight is in the range 1-100
            # podAntiAffinity:
            #   preferredDuringSchedulingIgnoredDuringExecution:
            #   - weight: 100
            #     podAffinityTerm:
            #       labelSelector:
            #         matchExpressions:
            #         - key: app
            #           operator: In
            #           values:
            #           - nginx-ingress
            #       topologyKey: kubernetes.io/hostname
        
            # # An example of required pod anti-affinity
            # podAntiAffinity:
            #   requiredDuringSchedulingIgnoredDuringExecution:
            #   - labelSelector:
            #       matchExpressions:
            #       - key: app
            #         operator: In
            #         values:
            #         - nginx-ingress
            #     topologyKey: "kubernetes.io/hostname"
        
          ## terminationGracePeriodSeconds
          ##
          terminationGracePeriodSeconds: 60
        
          ## Node labels for controller pod assignment
          ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
          ##
          nodeSelector: {}
        
          ## Liveness and readiness probe values
          ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
          ##
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            port: 10254
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            port: 10254
        
          ## Annotations to be added to controller pods
          ##
          podAnnotations: {}
        
          replicaCount: 1
        
          minAvailable: 1
        
          resources: {}
          #  limits:
          #    cpu: 100m
          #    memory: 64Mi
          #  requests:
          #    cpu: 100m
          #    memory: 64Mi
        
          autoscaling:
            enabled: false
            minReplicas: 2
            maxReplicas: 11
            targetCPUUtilizationPercentage: 50
            targetMemoryUtilizationPercentage: 50
        
          ## Override NGINX template
          customTemplate:
            configMapName: ""
            configMapKey: ""
        
          service:
            enabled: false
        
            annotations: {}
            labels: {}
            ## Deprecated, instead simply do not provide a clusterIP value
            omitClusterIP: false
            # clusterIP: ""
        
            ## List of IP addresses at which the controller services are available
            ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
            ##
            externalIPs: []
        
            loadBalancerIP: ""
            loadBalancerSourceRanges: []
        
            enableHttp: true
            enableHttps: true
        
            ## Set external traffic policy to: "Local" to preserve source IP on
            ## providers supporting it
            ## Ref: https://kubernetes.io/docs/tutorials/services/source-ip/#source-ip-for-services-with-typeloadbalancer
            externalTrafficPolicy: ""
        
            # Must be either "None" or "ClientIP" if set. Kubernetes will default to "None".
            # Ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
            sessionAffinity: ""
        
            healthCheckNodePort: 0
        
            ports:
              http: 80
              https: 443
        
            targetPorts:
              http: http
              https: https
        
            type: LoadBalancer
        
            # type: NodePort
            # nodePorts:
            #   http: 32080
            #   https: 32443
            #   tcp:
            #     8080: 32808
            nodePorts:
              http: ""
              https: ""
              tcp: {}
              udp: {}
        
          extraContainers: []
          ## Additional containers to be added to the controller pod.
          ## See https://github.com/lemonldap-ng-controller/lemonldap-ng-controller as example.
          #  - name: my-sidecar
          #    image: nginx:latest
          #  - name: lemonldap-ng-controller
          #    image: lemonldapng/lemonldap-ng-controller:0.2.0
          #    args:
          #      - /lemonldap-ng-controller
          #      - --alsologtostderr
          #      - --configmap=$(POD_NAMESPACE)/lemonldap-ng-configuration
          #    env:
          #      - name: POD_NAME
          #        valueFrom:
          #          fieldRef:
          #            fieldPath: metadata.name
          #      - name: POD_NAMESPACE
          #        valueFrom:
          #          fieldRef:
          #            fieldPath: metadata.namespace
          #    volumeMounts:
          #    - name: copy-portal-skins
          #      mountPath: /srv/var/lib/lemonldap-ng/portal/skins
        
          extraVolumeMounts: []
          ## Additional volumeMounts to the controller main container.
          #  - name: copy-portal-skins
          #   mountPath: /var/lib/lemonldap-ng/portal/skins
        
          extraVolumes: []
          ## Additional volumes to the controller pod.
          #  - name: copy-portal-skins
          #    emptyDir: {}
        
          extraInitContainers: []
          ## Containers, which are run before the app containers are started.
          # - name: init-myservice
          #   image: busybox
          #   command: ['sh', '-c', 'until nslookup myservice; do echo waiting for myservice; sleep 2; done;']
        
          admissionWebhooks:
            enabled: false
            failurePolicy: Fail
            port: 8443
        
            service:
              annotations: {}
              ## Deprecated, instead simply do not provide a clusterIP value
              omitClusterIP: false
              # clusterIP: ""
              externalIPs: []
              loadBalancerIP: ""
              loadBalancerSourceRanges: []
              servicePort: 443
              type: ClusterIP
        
            patch:
              enabled: true
              image:
                repository: jettech/kube-webhook-certgen
                tag: v1.0.0
                pullPolicy: IfNotPresent
              ## Provide a priority class name to the webhook patching job
              ##
              priorityClassName: ""
              podAnnotations: {}
              nodeSelector: {}
        
          metrics:
            port: 10254
            # if this port is changed, change healthz-port: in extraArgs: accordingly
            enabled: false
        
            service:
              annotations: {}
              # prometheus.io/scrape: "true"
              # prometheus.io/port: "10254"
        
              ## Deprecated, instead simply do not provide a clusterIP value
              omitClusterIP: false
              # clusterIP: ""
        
              ## List of IP addresses at which the stats-exporter service is available
              ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
              ##
              externalIPs: []
        
              loadBalancerIP: ""
              loadBalancerSourceRanges: []
              servicePort: 9913
              type: ClusterIP
        
            serviceMonitor:
              enabled: false
              additionalLabels: {}
              namespace: ""
              namespaceSelector: {}
              # Default: scrape .Release.Namespace only
              # To scrape all, use the following:
              # namespaceSelector:
              #   any: true
              scrapeInterval: 30s
              # honorLabels: true
        
            prometheusRule:
              enabled: false
              additionalLabels: {}
              namespace: ""
              rules: []
                # # These are just examples rules, please adapt them to your needs
                # - alert: TooMany500s
                #   expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"5.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
                #   for: 1m
                #   labels:
                #     severity: critical
                #   annotations:
                #     description: Too many 5XXs
                #     summary: More than 5% of the all requests did return 5XX, this require your attention
                # - alert: TooMany400s
                #   expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"4.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
                #   for: 1m
                #   labels:
                #     severity: critical
                #   annotations:
                #     description: Too many 4XXs
                #     summary: More than 5% of the all requests did return 4XX, this require your attention
        
        
          lifecycle: {}
        
          priorityClassName: ""
        
        ## Rollback limit
        ##
        revisionHistoryLimit: 10
        
        ## Default 404 backend
        ##
        defaultBackend:
        
          ## If false, controller.defaultBackendService must be provided
          ##
          enabled: true
        
          name: default-backend
          image:
            repository: rancher/nginx-ingress-controller-defaultbackend
            tag: "1.5-rancher1"
            pullPolicy: IfNotPresent
            # nobody user -> uid 65534
            runAsUser: 65534
        
          # This will fix the issue of HPA not being able to read the metrics.
          # Note that if you enable it for existing deployments, it won't work as the labels are immutable.
          # We recommend setting this to true for new deployments.
          useComponentLabel: false
        
          extraArgs: {}
        
          serviceAccount:
            create: true
            name:
          ## Additional environment variables to set for defaultBackend pods
          extraEnvs: []
        
          port: 8080
        
          ## Readiness and liveness probes for default backend
          ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
          ##
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
        
          ## Node tolerations for server scheduling to nodes with taints
          ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
          ##
          tolerations: []
          #  - key: "key"
          #    operator: "Equal|Exists"
          #    value: "value"
          #    effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"
        
          affinity: {}
        
          ## Security Context policies for controller pods
          ## See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for
          ## notes on enabling and using sysctls
          ##
          podSecurityContext: {}
        
          # labels to add to the deployment metadata
          deploymentLabels: {}
        
          # labels to add to the pod container metadata
          podLabels: {}
          #  key: value
        
          ## Node labels for default backend pod assignment
          ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
          ##
          nodeSelector: {}
        
          ## Annotations to be added to default backend pods
          ##
          podAnnotations: {}
        
          replicaCount: 1
        
          minAvailable: 1
        
          resources: {}
          # limits:
          #   cpu: 10m
          #   memory: 20Mi
          # requests:
          #   cpu: 10m
          #   memory: 20Mi
        
          service:
            annotations: {}
            ## Deprecated, instead simply do not provide a clusterIP value
            omitClusterIP: false
            # clusterIP: ""
        
            ## List of IP addresses at which the default backend service is available
            ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
            ##
            externalIPs: []
        
            loadBalancerIP: ""
            loadBalancerSourceRanges: []
            servicePort: 80
            type: ClusterIP
        
          priorityClassName: ""
        
        # If provided, the value will be used as the `release` label instead of .Release.Name
        releaseLabelOverride: ""
        
        ## Enable RBAC as per https://github.com/kubernetes/ingress/tree/master/examples/rbac/nginx and https://github.com/kubernetes/ingress/issues/266
        rbac:
          create: true
          scope: false
        
        # If true, create & use Pod Security Policy resources
        # https://kubernetes.io/docs/concepts/policy/pod-security-policy/
        podSecurityPolicy:
          enabled: false
        
        serviceAccount:
          create: true
          name:
        
        ## Optional array of imagePullSecrets containing private registry credentials
        ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
        imagePullSecrets: []
        # - name: secretName
        
        # TCP service key:value pairs
        # Ref: https://github.com/kubernetes/contrib/tree/master/ingress/controllers/nginx/examples/tcp
        ##
        tcp: {}
        #  8080: "default/example-tcp-svc:9000"
        
        # UDP service key:value pairs
        # Ref: https://github.com/kubernetes/contrib/tree/master/ingress/controllers/nginx/examples/udp
        ##
        udp: {}
        #  53: "kube-system/kube-dns:53"
        
        global:
          systemDefaultRegistry: ""
      canal: |
        rbac:
          # Specifies whether RBAC resources should be created
          create: true
          pspEnabled: false
        
        serviceAccount:
          # Specifies whether a ServiceAccount should be created
          create: true
          # The name of the ServiceAccount to use.
          # If not set and create is true, a name is generated using the fullname template
          name:
        
        apiService:
          # Specifies if the v1beta1.metrics.k8s.io API service should be created.
          #
          # You typically want this enabled! If you disable API service creation you have to
          # manage it outside of this chart for e.g horizontal pod autoscaling to
          # work with this release.
          create: true
        
        hostNetwork:
          # Specifies if metrics-server should be started in hostNetwork mode.
          #
          # You would require this enabled if you use alternate overlay networking for pods and
          # API server unable to communicate with metrics-server. As an example, this is required
          # if you use Weave network on EKS
          enabled: false
        
        image:
          pullPolicy: IfNotPresent
        
        imagePullSecrets: []
        # - registrySecretName
        
        args:
        # enable this if you have self-signed certificates, see: https://github.com/kubernetes-incubator/metrics-server
        #  - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
        
        resources: {}
        
        nodeSelector: {}
        
        tolerations: []
        
        affinity: {}
        
        replicas: 1
        
        extraContainers: []
        
        podLabels: {}
        
        podAnnotations: {}
        #  The following annotations guarantee scheduling for critical add-on pods.
        #    See more at: https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        #  scheduler.alpha.kubernetes.io/critical-pod: ''
        
        ## Set a pod priorityClassName
        priorityClassName: system-node-critical
        
        extraVolumeMounts: []
        #  - name: secrets
        #    mountPath: /etc/kubernetes/secrets
        #    readOnly: true
        
        extraVolumes: []
        #  - name: secrets
        #    secret:
        #      secretName: kube-apiserver
        
        livenessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 20
        
        readinessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 20
        
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["all"]
          readOnlyRootFilesystem: true
          runAsGroup: 10001
          runAsNonRoot: true
          runAsUser: 10001
        
        service:
          annotations: {}
          labels: {}
          #  Add these labels to have metrics-server show up in `kubectl cluster-info`
          #  kubernetes.io/cluster-service: "true"
          #  kubernetes.io/name: "Metrics-server"
          port: 443
          type: ClusterIP
        
        podDisruptionBudget:
          # https://kubernetes.io/docs/tasks/run-application/configure-pdb/
          enabled: false
          minAvailable:
          maxUnavailable:
        
        global:
          systemDefaultRegistry: ""
    serverArgs:
      cni:
        type: array
        options:
        - canal
      tls-san:
        type: array
      cluster-cidr:
        type: string
      service-cidr:
        type: string
      service-node-port-range:
        type: string
      cluster-dns:
        type: string
      cluster-domain:
        type: string
      kube-apiserver-arg:
        type: array
      kube-scheduler-arg:
        type: array
      kube-controller-manager-arg:
        type: array
      etcd-expose-metrics:
        type: boolean
      etcd-disable-snapshots:
        type: boolean
      etcd-snapshot-name:
        type: string
      etcd-snapshot-schedule-cron:
        type: string
      etcd-snapshot-retention:
        type: string
      etcd-snapshot-dir:
        type: string
      disable:
        type: array
        options:
        - rke2-coredns
        - rke2-ingress-nginx
        - rke2-kube-proxy
        - rke2-metrics-server
      secrets-encryption:
        type: boolean
      profile:
        type: string
        options:
        - cis-1.5
        - cis-1.6
      audit-policy-file:
        type: string
    agentArgs:
      kubelet-arg:
        type: array
      protect-kernel-defaults:
        type: boolean
      selinux:
        type: bool
      system-default-registry:
        type: string
      cloud-provider-name:
        type: string
      cloud-provider-config:
        type: string
      profile:
        type: enum
        options:
        - cis-1.5
        - cis-1.6
      audit-policy-file:
        type: string
      private-registry:
        type: string
